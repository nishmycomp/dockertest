version: '3.8'

services:
  # Redis for queue management
  redis:
    image: redis:7-alpine
    container_name: pdf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pdf-network

  # PDF Service with Supervisor (includes workers and monitor)
  pdf-service:
    build:
      context: ./pdf-service
      dockerfile: Dockerfile.supervisor
    container_name: pdf-service-supervised
    ports:
      - "3001:3001"  # Main PDF service
      - "3004:3004"  # Queue monitor HTTP
      - "3005:3005"  # Queue monitor WebSocket
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM:-"Imploy <noreply@imploy.com.au>"}
    volumes:
      - ./pdf-service:/app
      - pdf_storage:/app/storage
      - supervisor_logs:/var/log/supervisor
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    networks:
      - pdf-network

  # Nginx Load Balancer (optional - for multi-instance scaling)
  nginx:
    image: nginx:alpine
    container_name: pdf-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx-queue.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pdf-service
    restart: unless-stopped
    networks:
      - pdf-network

networks:
  pdf-network:
    driver: bridge

volumes:
  redis_data:
  pdf_storage:
  supervisor_logs:

